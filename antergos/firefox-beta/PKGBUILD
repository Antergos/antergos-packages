# Maintainer: Antergos Developers <dev@antergos.com>
# Contributors: Achilleas Pipinellis, speed145a, Schnouki, Det

pkgname=firefox-beta
_pkgname=firefox
pkgver=52.0b1
pkgrel=1
_majorver="${pkgver/rc*}"
_buildver="${pkgver/*rc}"
pkgdesc="Standalone web browser from mozilla.org - Beta Channel"
arch=('i686' 'x86_64')
url="https://www.mozilla.org/en-US/firefox/channel#beta"
license=('MPL' 'GPL' 'LGPL')
groups=('browser')

depends=('alsa-lib'  'dbus-glib'  'ffmpeg'                'gtk2'
        'gtk3'      'hunspell'   'icu'                   'libevent'
        'libvpx'    'libxt'      'mime-types'            'mozilla-common'
        'nss'       'sqlite'     'startup-notification'  'ttf-font')

makedepends=('autoconf2.13'  'cargo'      'diffutils'         'gconf'
            'imake'         'inetutils'  'libpulse'          'mesa'
            'python2'       'unzip'      'xorg-server-xvfb'  'yasm'
            'zip')

optdepends=('networkmanager: Location detection via available WiFi networks'
           'upower: Battery API')

provides=("firefox=${pkgver}")
conflicts=('firefox-beta-bin' 'firefox-beta')
options=('!emptydirs' '!makeflags')
_rc_url="https://ftp.mozilla.org/pub/firefox/candidates/$_majorver-candidates/build$_buildver"
_beta_url="https://ftp.mozilla.org/pub/mozilla.org/firefox/releases/${pkgver}"
_archpkg_git_url='https://git.archlinux.org/svntogit/packages.git/plain/trunk'

if [[ "${_buildver}" != "${pkgver}" ]]; then
	# Release Candidate
	source=("${_rc_url}/source/firefox-$_majorver.source.tar.xz")
else
	source=("${_beta_url}/source/firefox-${pkgver}.source.tar.xz")
fi

source+=("fix-wifi-scanner.diff::${_archpkg_git_url}/fix-wifi-scanner.diff?h=packages/firefox"
		"firefox-install-dir.patch::${_archpkg_git_url}/firefox-install-dir.patch?h=packages/firefox"
		"vendor.js::${_archpkg_git_url}/vendor.js?h=packages/firefox"
		"rust-i686.patch::${_archpkg_git_url}/rust-i686.patch?h=packages/firefox"
		"${pkgname}.desktop"
		'mozconfig')

md5sums=('41c4fae7ac3a0cf5e0af59edf460a106'
		'e2396b9918aa602427f80d48caf319b4'
		'dbf14588e85812ee769bd735823a0146'
		'aa9f776d2187cba09de65cbb02b39ca0'
		'40b197fcf8c855b3902414f4d591b18b'
		'259ea8127d1f3a72ac23db0a97455472'
		'962721af2a2ca41e97563355ff2eed40')

# Google API keys (see http://www.chromium.org/developers/how-tos/api-keys)
# Note: These are for Antergos Linux use ONLY. For your own distribution, please
# get your own set of keys. Feel free to contact info@antergos.com for
# more information.
_google_api_key='AIzaSyBPgpho0q0siP2tggJwIsDx8ykpp-Y76Xk'

# Mozilla API keys (see https://location.services.mozilla.com/api)
# Note: These are for Antergos Linux use ONLY. For your own distribution, please
# get your own set of keys. Feel free to contact info@antergos.com for
# more information.
_mozilla_api_key='fa35d4d6-6529-436f-b3a1-8b9af187eca2'


prepare() {
	cd "${_pkgname}-${pkgver}" || cd "${_pkgname}-${_majorver}"

	cp ../mozconfig .mozconfig
	patch -Np1 -i ../firefox-install-dir.patch

	# https://bugzilla.mozilla.org/show_bug.cgi?id=1314968
	patch -Np1 -i ../fix-wifi-scanner.diff

	# Build with the rust targets we actually ship
	patch -Np1 -i ../rust-i686.patch

	echo -n "$_google_api_key" >google-api-key
	echo "ac_add_options --with-google-api-keyfile=\"$PWD/google-api-key\"" >>.mozconfig

	echo -n "$_mozilla_api_key" >mozilla-api-key
	echo "ac_add_options --with-mozilla-api-keyfile=\"$PWD/mozilla-api-key\"" >>.mozconfig

	_python=/usr/bin/python2

	[[ 'i686' = "${CARCH}" ]] && {
		_python="/32build/root${_python}"
		echo 'ac_add_options --target=i686-unknown-linux-gnu' >>.mozconfig
		echo 'ac_add_options --host=i686-unknown-linux-gnu' >>.mozconfig
	}

	mkdir "$srcdir/path"

	ln -s ${_python} "$srcdir/path/python"
}


build() {
	cd "${_pkgname}-${pkgver}" || cd "${_pkgname}-${_majorver}"

	# _FORTIFY_SOURCE causes configure failures
	CPPFLAGS+=" -O2"

	# Hardening
	LDFLAGS+=" -Wl,-z,now"

	# GCC 6
	CXXFLAGS+=" -fno-delete-null-pointer-checks -fno-schedule-insns2"

	export PATH="${srcdir}/path:$PATH"

	# Do PGO
	# xvfb-run -a -s "-extension GLX -screen 0 1280x1024x24" \
	# make -f client.mk build MOZ_PGO=1
	make -f client.mk build
}


package() {
	cd "${_pkgname}-${pkgver}" || cd "${_pkgname}-${_majorver}"

	make -f client.mk DESTDIR="${pkgdir}" INSTALL_SDK= install

	install -Dm644 ../vendor.js "${pkgdir}/usr/lib/${pkgname}/browser/defaults/preferences/vendor.js"

	for i in 16 22 24 32 48 256; do
		install -Dm644 "browser/branding/official/default${i}.png" \
			"${pkgdir}/usr/share/icons/hicolor/${i}x${i}/apps/${pkgname}.png"
	done

	_branding='browser/branding/official'
	_hicolor="${pkgdir}/usr/share/icons/hicolor"
	install -Dm644 "${_branding}/content/icon64.png" "${_hicolor}/64x64/apps/${pkgname}.png"
	install -Dm644 "${_branding}/mozicon128.png" "${_hicolor}/128x128/apps/${pkgname}.png"
	install -Dm644 "${_branding}/content/about-logo.png" "${_hicolor}/192x192/apps/${pkgname}.png"
	install -Dm644 "${_branding}/content/about-logo@2x.png" "${_hicolor}/384x384/apps/${pkgname}.png"

	# Desktops
	install -Dm644 "${srcdir}/${pkgname}.desktop" "${pkgdir}/usr/share/applications"

	# Use system-provided dictionaries
	rm -rf "${pkgdir}/usr/lib/${pkgname}"/{dictionaries,hyphenation}
	ln -s /usr/share/hunspell "${pkgdir}/usr/lib/${pkgname}/dictionaries"
	ln -s /usr/share/hyphen "${pkgdir}/usr/lib/${pkgname}/hyphenation"
	
	# Replace duplicate binary with symlink
	# https://bugzilla.mozilla.org/show_bug.cgi?id=658850
	ln -sf firefox "${pkgdir}/usr/lib/${pkgname}/firefox-bin"
}

# -*- mode: bash;-*-
